{"version":3,"sources":["components/Nav/Nav.js","axios.js","components/Row/Row.js","requests.js","components/Banner/Banner.js","components/HomeScreen/HomeScreen.js","firebase.js","components/SignupScreen/SignupScreen.js","components/LoginScreen/LoginScreen.js","features/userSlice.js","components/PlansScreen/PlansScreen.js","components/ProfileScreen/ProfileScreen.js","App.js","app/store.js","reportWebVitals.js","index.js"],"names":["Nav","useState","show","handleShow","history","useHistory","transitionNavBar","window","scrollY","useEffect","addEventListener","className","onClick","push","src","alt","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","a","get","request","data","results","fetchData","map","movie","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","poster_path","backdrop_path","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","objectFit","backgroundImage","backgroundPosition","original_name","overview","substr","HomeScreen","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","SignupScreen","emailRef","useRef","passwordRef","action","type","ref","placeholder","e","preventDefault","signInWithEmailAndPassword","current","value","authUser","alert","createUserWithEmailAndPassword","LoginScreen","signIn","setSignIn","userSlice","createSlice","initialState","user","reducers","login","state","payload","logout","actions","selectUser","PlansScreen","products","setProducts","useSelector","subscription","setSubscription","collection","doc","uid","querySnapshot","forEach","subsription","role","current_period_end","seconds","current_period_start","where","productDoc","docs","price","prices","priceId","priceData","loadCheckout","add","success_url","location","origin","cancel_url","onSnapshot","snap","sessionId","message","loadStripe","redirectToCheckout","Date","toLocaleDateString","Object","entries","productId","productData","isCurrentPackage","toLowerCase","includes","description","ProfileScreen","email","signOut","App","dispatch","useDispatch","onAuthStateChanged","userAuth","path","configureStore","reducer","userReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.39e1caa6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const transitionNavBar = () => {\r\n        if (window.scrollY > 100) {\r\n            handleShow(true);\r\n        } else {\r\n            handleShow(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", transitionNavBar);\r\n        return () => window.addEventListener(\"scroll\", transitionNavBar);\r\n    }, [])\r\n    return (\r\n        <div className={`nav ${show && 'nav__black'}`}>\r\n            <div className=\"nav__contents\">\r\n                <img\r\n                    onClick={() => history.push(\"/\")}\r\n                    className=\"nav__logo\"\r\n                    src=\"https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.png\"\r\n                    alt=\"netflix-logo\"\r\n                />\r\n                <img\r\n                    onClick={() => history.push(\"/profile\")}\r\n                    className=\"nav__avatar\"\r\n                    src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n                    alt=\"netflix-avatar\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import axios from \"axios\";\r\n/* base url to make requests to the movie database */\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n// this is how it works\r\n// instance.get('/example') -> https://api.themoviedb.org/3/example\r\nexport default instance;\r\n// <- When you use 'default', when you import this variable from \"./axios\", you can name it whatever you want \r\n//  Also, you can only have 1 'default' in each file. but can export many","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../../axios\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl); // <-- When using a variable from outside\r\n      setMovies(request.data.results); // of useEffect(), you HAVE TO include it\r\n      return request; // inside the '[]' at the end of useEffect()\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]); // <-- Here's where we need to put the outside variable\r\n\r\n  // ^-- If you leave the '[]' blank, this code only runs once when the 'Row' loads.\r\n  // If you put a variable like 'movies' inside the '[]', this code will run once\r\n  // when the page first loads and everytime that varible changes. That variable is\r\n  // called the dependency.\r\n\r\n  // https://developers.google.com/youtube/player_parameters\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl('');\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img key={movie.id} onClick={() => handleClick(movie)} className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} src={`${base_url}${ isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} /> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n//can only have 1 default in a component, but can have multiple exports","const API_KEY= \"c650ec7ce77fc54267b408726f999016\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n  };\r\n  export default requests;","import React, { useState, useEffect} from \"react\";\r\nimport \"./Banner.css\";\r\nimport axios from \"../../axios\";\r\nimport requests from \"../../requests\";\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        const request = await axios.get(requests.fetchNetflixOriginals);\r\n        setMovie(\r\n          request.data.results[\r\n            Math.floor(Math.random() * request.data.results.length - 1)\r\n          ]\r\n        );\r\n        return request;\r\n      }\r\n      fetchData();\r\n    }, []);\r\n  \r\n    function truncate(str, n) {\r\n      return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }\r\n  \r\n    return (\r\n      <header\r\n        className=\"banner\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          objectFit: \"contain\",\r\n          backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n          backgroundPosition: \"center center\",\r\n        }}\r\n      >\r\n        <div className=\"banner__contents\">\r\n          <h1 className=\"banner__title\">\r\n            {movie?.title || movie?.name || movie?.original_name}\r\n          </h1>\r\n          <div className=\"banner__buttons\">\r\n            <button className=\"banner__button\">Play</button>\r\n            <button className=\"banner__button\">My List</button>\r\n          </div>\r\n          <h1 className=\"banner__description\">{truncate(movie?.overview, 200)}</h1>\r\n        </div>\r\n        <div className=\"banner--fadeBottom\" />\r\n      </header>\r\n    );\r\n  }\r\n  \r\n  export default Banner;","import React from 'react'\r\nimport './HomeScreen.css';\r\nimport Nav from \"../Nav/Nav\";\r\nimport Row from \"../Row/Row\";\r\nimport Banner from \"../Banner/Banner\";\r\nimport requests from \"../../requests\";\r\n\r\n\r\nfunction HomeScreen() {\r\n    return (\r\n      <div className=\"homeScreen\">\r\n        <Nav />\r\n        <Banner/>\r\n        <Row title=\"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\r\n        <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n        <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n        <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n        <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n        <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n        <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n        <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default HomeScreen;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCa1zYBPpZtqef8sAjpDrtTOFAejIF8b9Q\",\r\n    authDomain: \"netflix-clone-83724.firebaseapp.com\",\r\n    projectId: \"netflix-clone-83724\",\r\n    storageBucket: \"netflix-clone-83724.appspot.com\",\r\n    messagingSenderId: \"258045224259\",\r\n    appId: \"1:258045224259:web:e392c44251428da5c27bf6\",\r\n    measurementId: \"G-3F87WLGLB3\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  \r\n  export {auth}\r\n  export default db;","import React, { useRef } from 'react';\r\nimport { auth } from '../../firebase';\r\nimport \"./SignupScreen.css\";\r\n\r\nfunction SignupScreen() {\r\n    const emailRef = useRef(null);\r\n    const passwordRef = useRef(null);\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        auth.createUserWithEmailAndPassword(\r\n            emailRef.current.value,\r\n            passwordRef.current.value\r\n        ).then((authUser) => {\r\n            console.log(authUser)\r\n        }).catch((error) => {\r\n            alert(error);\r\n        });\r\n    }\r\n\r\n    const signIn = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(\r\n            emailRef.current.value,\r\n            passwordRef.current.value\r\n        ).then((authUser) => {\r\n            console.log(authUser)\r\n        }).catch((error) => {\r\n            alert(error)\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"signupScreen\">\r\n            <form action=\"\">\r\n                <h1>Sign In</h1>\r\n                <input type=\"email\" ref={emailRef} placeholder=\"Email\"/>\r\n                <input type=\"password\" ref={passwordRef} placeholder=\"Password\"/>\r\n                <button type=\"submit\" onClick={signIn}>Sign In</button>\r\n                <h4>\r\n                    <span className=\"signupScreen__grey\">New to Netflix? </span>\r\n                    <span className=\"signupScreen__link\" onClick={register}>Sign Up Now!</span>\r\n                </h4>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupScreen\r\n","import React, { useState } from 'react';\r\nimport SignupScreen from \"../SignupScreen/SignupScreen\";\r\nimport \"./LoginScreen.css\";\r\n\r\nfunction LoginScreen() {\r\n    const [signIn, setSignIn] = useState(false);\r\n    return (\r\n        <div className=\"loginScreen\">\r\n            <div className=\"loginScreen__Background\">\r\n                <img\r\n                    className=\"loginScreen__logo\"\r\n                    src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n                    alt=\"\"\r\n                />\r\n                <button className=\"loginScreen__button\" onClick={() => setSignIn(true)}>\r\n                    Sign in\r\n\t\t\t\t</button>\r\n\r\n                <div className=\"loginScreen__gradient\" />\r\n            </div>\r\n\r\n            <div className=\"loginScreen__body\">\r\n                {signIn ? (\r\n                    <SignupScreen />\r\n                ) : (\r\n                        <>\r\n                            <h1>Unlimited films, TV programmes and more.</h1>\r\n                            <h2>Watch anywhere, Cancel at any time. </h2>\r\n                            <h3>\r\n                                Ready to watch? Enter your email to create or restart your\r\n                                membership.\r\n\t\t\t\t\t\t</h3>\r\n\r\n                            <div className=\"loginScreen__input\">\r\n                                <form>\r\n                                    <input type=\"email\" placeholder=\"Email address\" />\r\n                                    <button\r\n                                        className=\"loginScreen__getStarted\"\r\n                                        onClick={() => setSignIn(true)}>\r\n                                        GET STARTED\r\n\t\t\t\t\t\t\t\t</button>\r\n                                </form>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginScreen\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload\r\n    },\r\n    logout: (state) => {\r\n      state.user = null\r\n    }\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport \"./PlansScreen.css\";\r\nimport { selectUser } from '../../features/userSlice';\r\nimport db from '../../firebase';\r\nimport { loadStripe } from \"@stripe/react-stripe-js\";\r\n\r\nfunction PlansScreen() {\r\n    const [products, setProducts] = useState([]);\r\n    const user = useSelector(selectUser);\r\n    const [subscription, setSubscription] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      db.collection(\"customers\")\r\n        .doc(user.uid)\r\n        .collection(\"subscriptions\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach(async (subsription) => {\r\n            setSubscription({\r\n              role: subsription.data().role,\r\n              current_period_end: subsription.data().current_period_end.seconds,\r\n              current_period_start: subsription.data().current_period_start\r\n                .seconds,\r\n            });\r\n          });\r\n        });\r\n    }, [user.uid]);\r\n  \r\n    useEffect(() => {\r\n      db.collection(\"products\")\r\n        .where(\"active\", \"==\", true)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const products = {};\r\n          querySnapshot.forEach(async (productDoc) => {\r\n            products[productDoc.id] = productDoc.data();\r\n            const priceSnap = await productDoc.ref.collection(\"prices\").get();\r\n            priceSnap.docs.forEach((price) => {\r\n              products[productDoc.id].prices = {\r\n                priceId: price.id,\r\n                priceData: price.data(),\r\n              };\r\n            });\r\n          });\r\n          setProducts(products);\r\n        });\r\n    }, []);\r\n  \r\n    console.log(products);\r\n    console.log(subscription);\r\n  \r\n    const loadCheckout = async (priceId) => {\r\n      const docRef = await db\r\n        .collection(\"customers\")\r\n        .doc(user.uid)\r\n        .collection(\"checkout_sessions\")\r\n        .add({\r\n          price: priceId,\r\n          success_url: window.location.origin,\r\n          cancel_url: window.location.origin,\r\n        });\r\n      docRef.onSnapshot(async (snap) => {\r\n        const { error, sessionId } = snap.data();\r\n  \r\n        if (error) {\r\n          alert(`An error occured: ${error.message}`);\r\n        }\r\n  \r\n        if (sessionId) {\r\n          const stripe = await loadStripe(\r\n            \"pk_test_51HQMANKYY3oas86Fgs8StBB8rUDm63dXwSErGWlVWeosm5XI1PLERJNiXXSLQf6ucWHUWKqTbOVAtYo2hQxWO0NY005O0MNkeJ\"\r\n          );\r\n          stripe.redirectToCheckout({ sessionId });\r\n        }\r\n      });\r\n    };\r\n  \r\n    return (\r\n      <div className=\"plansScreen\">\r\n        <br />\r\n        {subscription && (\r\n          <p>\r\n            Renewal date:{\" \"}\r\n            {new Date(\r\n              subscription?.current_period_end * 1000\r\n            ).toLocaleDateString()}\r\n          </p>\r\n        )}\r\n        {Object.entries(products).map(([productId, productData]) => {\r\n          // add logic to check user sub is active..\r\n          const isCurrentPackage = productData.name\r\n            ?.toLowerCase()\r\n            .includes(subscription?.role);\r\n  \r\n          return (\r\n            <div\r\n              key={productId}\r\n              className={`${\r\n                isCurrentPackage && \"plansScreen__plan--disabled\"\r\n              } plansScreen__plan`}\r\n            >\r\n              <div className=\"plansScreen__info\">\r\n                <h5>{productData.name} </h5>\r\n                <h6>{productData.description}</h6>\r\n              </div>\r\n              <button\r\n                onClick={() =>\r\n                  !isCurrentPackage && loadCheckout(productData.prices.priceId)\r\n                }\r\n              >\r\n                {isCurrentPackage ? \"Current Package\" : \"Subscribe\"}\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default PlansScreen;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../features/userSlice';\r\nimport { auth } from '../../firebase';\r\nimport Nav from '../Nav/Nav';\r\nimport PlansScreen from \"../PlansScreen/PlansScreen\";\r\nimport './ProfileScreen.css';\r\n\r\nfunction ProfileScreen() {\r\n    const user = useSelector(selectUser);\r\n    console.log(user);\r\n    return (\r\n        <div className=\"profileScreen\">\r\n            <Nav />\r\n            <div className=\"profileScreen__body\">\r\n                <h1>Edit Profile</h1>\r\n                <div className=\"profileScreen__info\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" alt=\"netflix-avata\"\r\n                    />\r\n                    <div className=\"profileScreen__details\">\r\n                        <h2>{user.email}</h2>\r\n                        <div className=\"profileScreen__plans\">\r\n                            <h3>Plans</h3>\r\n                            <PlansScreen />\r\n                            <button onClick={() => auth.signOut()} className=\"profileScreen__signOut\">\r\n                                Sign Out\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport './App.css';\r\nimport HomeScreen from \"../src/components/HomeScreen/HomeScreen\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport LoginScreen from \"../src/components/LoginScreen/LoginScreen\";\r\nimport ProfileScreen from \"../src/components/ProfileScreen/ProfileScreen\";\r\nimport { auth } from \"./firebase\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login, logout, selectUser } from \"../src/features/userSlice\";\r\n\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n      if (userAuth) {\r\n        dispatch(login({\r\n          uid: userAuth.uid,\r\n          email: userAuth.email\r\n        }));\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    })\r\n    return unsubscribe;\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <LoginScreen />\r\n        ): (\r\n          <Switch>\r\n            <Route path=\"/profile\">\r\n                <ProfileScreen />\r\n              </Route>\r\n            <Route path = \"/\">\r\n              <HomeScreen />\r\n            </Route>\r\n          </Switch>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        user: userReducer,\r\n    },\r\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}